#!/bin/bash

NBARGS=6
function print_usage() {
    echo
    echo "Usage: $0 <working_directory> <projects_dir> <backend> <project> <top_network> <output_dir> [<additional_flags>]"
    echo "    <working_directory>           Path to folder used to perform build & tests"
    echo "    <projects_dir>                Folder containing CAL projects"
    echo "    <backend>                     Identifier of the backend tu use (c, llvm, jade, tta, etc.)"
    echo "    <project>                     The project containing application to build"
    echo "    <top_network>                 Qualified name of the top network to build"
    echo "    <output_dir>                  Folder where application will be built"
    echo "    <additional_flags>            [Optional] Flags added to backend execution command line"
}

source $(dirname $0)/defines.sh

if [ $# -lt $NBARGS ]; then
    print_usage
    exit $E_BADARGS
fi

[ ! -d "$2" ] && echo "Missing CAL projects folder" && print_usage && exit $E_BADARGS
[ -z "$3" ] && echo "Missing backend name" && print_usage && exit $E_BADARGS
[ -z "$4" ] && echo "Missing project name" && print_usage && exit $E_BADARGS
[ -z "$5" ] && echo "Missing top network qualified name" && print_usage && exit $E_BADARGS
[ -z "$6" ] && echo "Missing output folder" && print_usage && exit $E_BADARGS

APPDIR=$2
BACKEND=$3
PROJECT=$4
NETWORK=$5
OUTPUT=$6
FLAGS=$7

echo "***START*** $0 $(date -R)"

[ ! -d "$OUTPUT" ] && mkdir -p $OUTPUT

# This script does not manage separated workspace / cal applications folders
# Hope this will be implemented in the future
RUNWORKSPACE=$APPDIR

rm -fr $RUNWORKSPACE/.metadata $RUNWORKSPACE/.JETEmitters
rm -fr $APPDIR/**/bin

echo "Register Orcc projects in eclipse workspace"
$ECLIPSERUN/eclipse     -nosplash -consoleLog \
                        -application net.sf.orcc.cal.workspaceSetup \
                        -data $RUNWORKSPACE \
                        $APPDIR

# Frontend will generate IR only for used files. But all IR must be generated for jade and java backend
if [ "$BACKEND" != "jade" ] && [ "$BACKEND" != "java" ]; then
    FENETWORK=$NETWORK
fi

echo ""
echo "Generate Orcc IR for $PROJECT and projects it depends on"
$ECLIPSERUN/eclipse     -nosplash -consoleLog \
                        -application net.sf.orcc.cal.cli \
                        -data $RUNWORKSPACE \
                        $PROJECT \
                        $FENETWORK \
                        -vmargs -Xms40m -Xmx768m

rm -fr $OUTPUT/*

echo ""
echo "Build application with $BACKEND backend"
$ECLIPSERUN/eclipse     -nosplash -consoleLog \
                        -application net.sf.orcc.backends.$BACKEND \
                        -data $RUNWORKSPACE \
                        -p $PROJECT \
                        -o $OUTPUT \
                        $FLAGS \
                        $NETWORK \
                        -vmargs -Xms40m -Xmx768m

echo "***END*** $0 $(date -R)"
